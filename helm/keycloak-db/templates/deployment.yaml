apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride | default (printf "%s-postgres" .Release.Name) }}
  labels:
    app.kubernetes.io/name: {{ .Values.nameOverride | default "postgres" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.nameOverride | default "postgres" }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Values.nameOverride | default "postgres" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride | default (printf "%s-postgres" .Release.Name) }}-secret
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride | default (printf "%s-postgres" .Release.Name) }}-secret
                  key: postgres-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride | default (printf "%s-postgres" .Release.Name) }}-secret
                  key: postgres-database
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            {{- if .Values.probes.liveness.exec }}
            exec:
              command:
              {{- range .Values.probes.liveness.exec.command }}
                - {{ . | quote }}
              {{- end }}
            {{- else if .Values.probes.liveness.tcpSocket }}
            tcpSocket:
              port: {{ .Values.probes.liveness.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold | default 1 }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            {{- if .Values.probes.readiness.exec }}
            exec:
              command:
              {{- range .Values.probes.readiness.exec.command }}
                - {{ . | quote }}
              {{- end }}
            {{- else if .Values.probes.readiness.tcpSocket }}
            tcpSocket:
              port: {{ .Values.probes.readiness.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold | default 1 }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
            successThreshold: 1
            failureThreshold: 6
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ .Values.fullnameOverride | default (printf "%s-postgres" .Release.Name) }}-pvc
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
