apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride | default "arranger" }}
  labels:
    app.kubernetes.io/name: arranger
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: arranger
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: arranger
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: arranger
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5050
              protocol: TCP
          env:
            # Arranger Variables
            - name: ENABLE_LOGS
              value: "{{ .Values.arranger.enableLogs }}"
            # Elasticsearch Variables  
            - name: ES_HOST
              value: "{{ .Values.arranger.elasticsearch.host }}"
            - name: ES_USER
              value: "{{ .Values.arranger.elasticsearch.user }}"
            - name: ES_PASS
              value: "{{ .Values.arranger.elasticsearch.password }}"
            # Stage Variables
            - name: REACT_APP_BASE_URL
              value: "{{ .Values.arranger.stage.baseUrl }}"
            - name: REACT_APP_ARRANGER_ADMIN_ROOT
              value: "{{ .Values.arranger.stage.adminRoot }}"
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path | default "/" }}
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: arranger-configs
              mountPath: /app/modules/server/configs
              readOnly: true
      volumes:
        - name: arranger-configs
          configMap:
            name: arranger-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
