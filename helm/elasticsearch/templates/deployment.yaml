apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride | default (printf "%s-elasticsearch" .Release.Name) }}
  labels:
    app.kubernetes.io/name: {{ .Values.nameOverride | default "elasticsearch" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.nameOverride | default "elasticsearch" }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.nameOverride | default "elasticsearch" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: elasticsearch
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          env:
            # Cluster configuration
            - name: cluster.name
              value: {{ .Values.elasticsearch.cluster.name | quote }}
            - name: discovery.type
              value: {{ .Values.elasticsearch.discovery.type | quote }}
            # Security configuration (disabled for dev)
            - name: xpack.security.enabled
              value: "false"
            # Java heap settings
            - name: ES_JAVA_OPTS
              value: {{ .Values.elasticsearch.java.opts | quote }}
            # Network settings
            - name: network.host
              value: {{ .Values.elasticsearch.network.host | quote }}
            # Bootstrap settings
            - name: bootstrap.memory_lock
              value: "false"
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            {{- if .Values.probes.liveness.httpGet }}
            httpGet:
              path: {{ .Values.probes.liveness.httpGet.path }}
              port: {{ .Values.probes.liveness.httpGet.port }}
            {{- else if .Values.probes.liveness.tcpSocket }}
            tcpSocket:
              port: {{ .Values.probes.liveness.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            {{- if .Values.probes.readiness.httpGet }}
            httpGet:
              path: {{ .Values.probes.readiness.httpGet.path }}
              port: {{ .Values.probes.readiness.httpGet.port }}
            {{- else if .Values.probes.readiness.tcpSocket }}
            tcpSocket:
              port: {{ .Values.probes.readiness.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: opensearch-data
              mountPath: /usr/share/opensearch/data
      volumes:
        - name: opensearch-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.fullnameOverride | default (printf "%s-elasticsearch" .Release.Name) }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
