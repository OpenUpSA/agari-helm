apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride | default (printf "%s-kafka" .Release.Name) }}
  labels:
    app.kubernetes.io/name: {{ .Values.nameOverride | default "kafka" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.nameOverride | default "kafka" }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Values.nameOverride | default "kafka" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: kafka
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: kafka
              containerPort: 9092
              protocol: TCP
            - name: external
              containerPort: 29092
              protocol: TCP
            - name: controller
              containerPort: 9093
              protocol: TCP
          env:
            # Core Kafka Configuration
            - name: KAFKA_PROCESS_ROLES
              value: {{ .Values.kafka.processRoles | quote }}
            - name: KAFKA_NODE_ID
              value: {{ .Values.kafka.nodeId | quote }}
            - name: CLUSTER_ID
              value: {{ .Values.kafka.clusterId | quote }}
            # Listeners
            - name: KAFKA_ADVERTISED_LISTENERS
              value: {{ .Values.kafka.advertisedListeners | quote }}
            - name: KAFKA_LISTENERS
              value: {{ .Values.kafka.listeners | quote }}
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: {{ .Values.kafka.listenerSecurityProtocolMap | quote }}
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: {{ .Values.kafka.interBrokerListenerName | quote }}
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: {{ .Values.kafka.controllerQuorumVoters | quote }}
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: {{ .Values.kafka.controllerListenerNames | quote }}
            # Storage Configuration
            - name: KAFKA_LOG_DIRS
              value: {{ .Values.kafka.logDirs | quote }}
            - name: KAFKA_LOG_RETENTION_HOURS
              value: {{ .Values.kafka.logRetentionHours | quote }}
            - name: KAFKA_LOG_RETENTION_BYTES
              value: {{ .Values.kafka.logRetentionBytes | quote }}
            # Topic Configuration
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: {{ .Values.kafka.offsetsTopicReplicationFactor | quote }}
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: {{ .Values.kafka.autoCreateTopicsEnable | quote }}
            - name: KAFKA_NUM_PARTITIONS
              value: {{ .Values.kafka.numPartitions | quote }}
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: {{ .Values.kafka.defaultReplicationFactor | quote }}
            - name: KAFKA_MIN_INSYNC_REPLICAS
              value: {{ .Values.kafka.minInsyncReplicas | quote }}
            # Performance Tuning
            - name: KAFKA_MESSAGE_MAX_BYTES
              value: {{ .Values.kafka.messageMaxBytes | quote }}
            - name: KAFKA_REPLICA_FETCH_MAX_BYTES
              value: {{ .Values.kafka.replicaFetchMaxBytes | quote }}
            # Logging Configuration
            - name: KAFKA_LOG4J_LOGGERS
              value: {{ .Values.kafka.log4jLoggers | quote }}
            - name: KAFKA_LOG4J_ROOT_LOGLEVEL
              value: {{ .Values.kafka.log4jRootLoglevel | quote }}
          livenessProbe:
            tcpSocket:
              port: kafka
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: kafka
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: {{ .Values.fullnameOverride | default (printf "%s-kafka" .Release.Name) }}-pvc
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
