# AGARI Overture Stack - Essential Workflow

# Test file info
@test_file_name = test_data.fasta
@test_file_size = 298
@test_file_md5 = cc70b8e811b39c98a938edf87145e34d

# Fixed IDs for Keycloak permissions
@study_id = covid-001
@analysis_id = analysis001

# Authentication config
@username = covid-researcher
@password = pass123
@realm = agari
@client_id = dms
@client_secret = VDyLEjGR3xDQvoQlrHq5AB6OwbW0Refc

### 1. LOGIN to get access token
# @name login
POST http://keycloak.local/realms/{{realm}}/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username={{username}}
&password={{password}}
&grant_type=password
&client_id={{client_id}}
&client_secret={{client_secret}}

###
@token = {{login.response.body.access_token}}


### === FOLIO PROJECTS SERVICE ===

### 2.1. Folio Health Check
GET http://folio.local/health

### PATHOGENS

### 2.2a: Create a pathogen
POST http://folio.local/pathogens
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "SARS-CoV-2",
  "scientific_name": "Severe acute respiratory syndrome coronavirus 2",
  "description": "The virus that causes COVID-19"
}

### 2.2b: Get all pathogens
GET http://folio.local/pathogens
Authorization: Bearer {{token}}

### 2.2c: Create another pathogen (Malaria)
POST http://folio.local/pathogens
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Malaria",
  "scientific_name": "Plasmodium falciparum",
  "description": "Most severe form of malaria parasite"
}

### 2.3a: Create a project for SARS-CoV-2 (use pathogen ID from Test 13 response)
# @name createProject
POST http://folio.local/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "slug": "covid-genomics-2025",
  "name": "COVID-19 Genomics Study 2025",
  "description": "Large-scale genomic surveillance of SARS-CoV-2 variants",
  "pathogen_id": "bc860c60-d5a7-40f6-896a-2db048bcd79a"
}

### 2.3b: Get all projects
GET http://folio.local/projects
Authorization: Bearer {{token}}

### 2.3c: Get specific project by ID
GET http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6
Authorization: Bearer {{token}}

### 2.3d: Get project summary
GET http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/summary
Authorization: Bearer {{token}}

### 3.3e: Get project members
GET http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/members
Authorization: Bearer {{token}}

### 2.4a: Create a study in Folio (which will also create it in SONG)
# @name createStudy
POST http://folio.local/studies
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "study_id": "covid-001",
  "name": "COVID-19 Variant Tracking Study",
  "description": "Analysis of SARS-CoV-2 genetic variants in South Africa",
  "project_id": "8bc2c6bc-94c9-4739-827e-0a5d1584afa6"
}

### 2.4b: Get all studies
GET http://folio.local/studies
Authorization: Bearer {{token}}

### 2.4b: Verify study was created in SONG
GET http://song.local/studies/all
Authorization: Bearer {{token}}

### === FOLIO CONVENIENCE ENDPOINTS ===

### Add user to project read group
POST http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "covid-researcher",
  "permission": "read"
}

### Add user to project write group
POST http://folio.local/projects/994ff571-d657-4361-93d0-14df87c349d6/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "covid-researcher",
  "permission": "write"
}

### Add user to project admin group
POST http://folio.local/projects/8d761c8d-008f-4cf5-9260-4e0bfe363663/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "admin",
  "permission": "admin"
}

### Remove user from project write group
DELETE http://folio.local/projects/8d761c8d-008f-4cf5-9260-4e0bfe363663/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "admin",
  "permission": "write"
}

### === STUDY MEMBER MANAGEMENT ===

### Get study members
GET http://folio.local/studies/STUDY_UUID_HERE/members
Authorization: Bearer {{token}}

### Add user to study read group
POST http://folio.local/studies/STUDY_UUID_HERE/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "covid-researcher",
  "permission": "read"
}

### Add user to study write group
POST http://folio.local/studies/STUDY_UUID_HERE/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "covid-researcher",
  "permission": "write"
}

### Remove user from study read group
DELETE http://folio.local/studies/STUDY_UUID_HERE/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "covid-researcher",
  "permission": "read"
}


### === SONG SERVICE ===

### 3.1a. CREATE STUDY
POST http://song.local/studies/{{study_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "studyId": "{{study_id}}",
  "name": "AGARI Test Study", 
  "description": "Test study for genomic data workflow",
  "organization": "NICD",
  "info": {
    "projectType": "genomics",
    "region": "South Africa"
  }
}

### 3.1b. GET STUDY DETAILS
GET http://song.local/studies/{{study_id}}/
Authorization: Bearer {{token}}

### 3.1c. GET STUDY ANALYSES
GET http://song.local/studies/{{study_id}}/analysis
Authorization: Bearer {{token}}

### 3.1d. LIST STUDIES
GET http://song.local/studies/all
Authorization: Bearer {{token}}

### 3.2a. SUBMIT ANALYSIS
# @name submitAnalysis
POST http://song.local/submit/{{study_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

< ./data/analysis_submission.json

### 3.2b. GET ANALYSIS DETAILS
# Extract analysis_id from step 4 response and get full analysis details
# @submitted_analysis_id = {{submitAnalysis.response.body.analysisId}}
@submitted_analysis_id = 759d93b7-3615-436a-9d93-b73615e36a12
# @name getAnalysis
GET http://song.local/studies/{{study_id}}/analysis/{{submitted_analysis_id}}
Authorization: Bearer {{token}}

### === SCORE SERVICE ===

### 4.1a. INITIALIZE SCORE UPLOAD
# Extract object_id from step 5 response
@object_id = {{getAnalysis.response.body.files[0].objectId}}
# @name initUpload
POST http://score.local/upload/{{object_id}}/uploads
Authorization: Bearer {{token}}
Content-Type: application/x-www-form-urlencoded

fileSize={{test_file_size}}
&md5={{test_file_md5}}
&overwrite=true

###
@upload_id = {{initUpload.response.body.uploadId}}
@presigned_url = {{initUpload.response.body.parts.0.url}}

@md5 = {{initUpload.response.body.objectMd5}}

### 4.1b. UPLOAD FILE TO MINIO
# Using hosts file entry: 127.0.0.1 minio (with port-forward to MinIO)
# @name uploadFile
PUT {{presigned_url}}
Content-Type: text/plain

< ./data/{{test_file_name}}

###
# @etag = {{uploadFile.response.headers.ETag}}
@etag = a1421b18d7859ad811877b981fedca4f
# Debug variables before step 8a
@debug_object_id = {{object_id}}
@debug_etag = {{etag}}
# @etag_stripped = {{etag.replace('"', '')}}
@debug_md5 = {{md5}}
@debug_upload_id = {{upload_id}}

### 4.1c. Finalise Part Upload
# @name finalizePartUpload
POST http://score.local/upload/{{object_id}}/parts?partNumber=1&etag={{etag}}&md5={{md5}}&uploadId={{upload_id}}
Authorization: Bearer {{token}}
Content-Type: application/json

### 4.1d. Finalize upload
# @name finalizeUpload
POST http://score.local/upload/{{object_id}}?uploadId={{upload_id}}
Authorization: Bearer {{token}}
Content-Type: application/json

@analysis_id = 759d93b7-3615-436a-9d93-b73615e36a12

### === SONG SERVICE ===

### 5.1a. PUBLISH ANALYSIS 
PUT http://song.local/studies/{{study_id}}/analysis/publish/{{analysis_id}}
Authorization: Bearer {{token}}

### 5.1b. UNPUBLISH ANALYSIS
PUT http://song.local/studies/{{study_id}}/analysis/unpublish/{{analysis_id}}
Authorization: Bearer {{token}}

### 5.2b. GET ANALYSIS DETAILS
# Extract analysis_id from step 4 response and get full analysis details
# @name getAnalysis
GET http://song.local/studies/{{study_id}}/analysis/{{analysis_id}}
Authorization: Bearer {{token}}

### === MAESTRO SERVICE ===

### 6.1 TRIGGER MAESTRO INDEXING
# @name maestroIndex
POST http://maestro.local/index/repository/song.overture/study/{{study_id}}
Authorization: Bearer {{token}}

### === ELASTICSEARCH ===

### 7.1 CHECK ELASTICSEARCH INDEX
# @name checkElasticsearch
GET http://elasticsearch.local/agari-index/_search
Content-Type: application/json

{
  "query": {
    "match_all": {}
  }
}

### === ARRANGER SERVICE ===

### 8.1 CHECK ARRANGER DATA ACCESS
# @name arrangerGraphQL
POST http://arranger.local/graphql
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "query": "query {file {hits {total}}}"
}