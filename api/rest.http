# AGARI Overture Stack - RBAC Testing Workflow

# Test file info
@test_file_name = test_data.fasta
@test_file_size = 298
@test_file_md5 = cc70b8e811b39c98a938edf87145e34d

# Fixed IDs for testing
@study_id = covid-001
@analysis_id = analysis001

# Organisation setup
@default_org = default-org
@nicd_org = nicd-org
@lab_org = lab-org

# Authentication config - Test with different users
@realm = agari
@client_id = dms
@client_secret = VDyLEjGR3xDQvoQlrHq5AB6OwbW0Refc

# === TEST USERS FOR RBAC ===
# Owner (has all permissions across all projects)
@owner_username = owner@nicd.ac.za
@owner_password = pass123

# Organisation Admin (can manage all org members and projects)
@org_admin_username = org-admin@nicd.ac.za
@org_admin_password = pass123

# Organisation Contributor (has contributor access to all projects)
@org_contributor_username = org-contributor@nicd.ac.za
@org_contributor_password = pass123

# Organisation Viewer (has viewer access to all projects)
@org_viewer_username = org-viewer@nicd.ac.za
@org_viewer_password = pass123

# Project-specific Admin (admin on specific projects only)
@project_admin_username = admin@nicd.ac.za
@project_admin_password = pass123

# Project-specific Contributor (contributor on specific projects only)
@contributor_username = contributor@lab.bio
@contributor_password = pass123

# Project-specific Viewer (viewer on specific projects only)
@viewer_username = viewer@research.org
@viewer_password = pass123

# External org user for cross-org testing
@external_user_username = external@another-org.com
@external_user_password = pass123

# Current test user (change this to test different roles)
@username = {{owner_username}}
@password = {{owner_password}}

### 1. LOGIN to get access token
# @name login
POST http://keycloak.local/realms/{{realm}}/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username={{username}}
&password={{password}}
&grant_type=password
&client_id={{client_id}}
&client_secret={{client_secret}}

###
@token = {{login.response.body.access_token}}


### === RBAC TESTING SCENARIOS ===

### Test 1: Check current user info and organisation
GET http://folio.local/auth/user-info
Authorization: Bearer {{token}}

### Test 2: Get user's organisation roles
GET http://folio.local/auth/user-roles
Authorization: Bearer {{token}}


### === FOLIO PROJECTS SERVICE - RBAC TESTS ===

### Health Check
GET http://folio.local/health

### === PATHOGENS MANAGEMENT ===

### Create SARS-CoV-2 pathogen (requires Owner/Org Admin)
POST http://folio.local/pathogens
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "SARS-CoV-2",
  "scientific_name": "Severe acute respiratory syndrome coronavirus 2",
  "description": "The virus that causes COVID-19"
}

### Create Malaria pathogen (requires Owner/Org Admin)
POST http://folio.local/pathogens
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Malaria",
  "scientific_name": "Plasmodium falciparum",
  "description": "Most severe form of malaria parasite"
}

### Get all pathogens (all authenticated users)
GET http://folio.local/pathogens
Authorization: Bearer {{token}}


### === PROJECT MANAGEMENT TESTS ===

### Create PRIVATE project (requires Owner/Org Admin)
# @name createPrivateProject
POST http://folio.local/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "slug": "nicd-covid-private",
  "name": "NICD COVID-19 Private Study",
  "description": "Internal NICD genomic surveillance - private data",
  "pathogen_id": "bc860c60-d5a7-40f6-896a-2db048bcd79a",
  "privacy": "private",
  "organisation_id": "{{default_org}}"
}

### Create SEMI-PRIVATE project (requires Owner/Org Admin)  
# @name createSemiPrivateProject
POST http://folio.local/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "slug": "nicd-covid-surveillance",
  "name": "NICD COVID-19 Surveillance Study",
  "description": "Regional surveillance data - metadata shared for dashboards",
  "pathogen_id": "bc860c60-d5a7-40f6-896a-2db048bcd79a",
  "privacy": "semi-private",
  "organisation_id": "{{default_org}}"
}

### Create PUBLIC project (requires Owner/Org Admin)
# @name createPublicProject
POST http://folio.local/projects
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "slug": "africa-covid-public",
  "name": "Africa COVID-19 Open Research",
  "description": "Public genomic research accessible to all authenticated users",
  "pathogen_id": "bc860c60-d5a7-40f6-896a-2db048bcd79a",
  "privacy": "public",
  "organisation_id": "{{default_org}}"
}

### Get all projects (visibility depends on user role and project privacy)
GET http://folio.local/projects
Authorization: Bearer {{token}}

### Get specific project by ID (access depends on user role and project privacy)
GET http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6
Authorization: Bearer {{token}}

### Get project summary (access depends on user role)
GET http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/summary
Authorization: Bearer {{token}}

### Get project members (requires Owner/Admin of project)
GET http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/members
Authorization: Bearer {{token}}


### === PROJECT MEMBER MANAGEMENT (Owner/Admin only) ===

### Add user with viewer role to project
POST http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "viewer@research.org",
  "permission": "viewer"
}

### Add user with contributor role to project
POST http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "contributor@lab.bio",
  "permission": "contributor"
}

### Add user with admin role to project
POST http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "admin@nicd.ac.za",
  "permission": "admin"
}

### Remove user from project (Owner/Admin only)
DELETE http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "viewer@research.org",
  "permission": "viewer"
}

### === STUDY MANAGEMENT ===

### Create a study (requires Owner/Admin/Contributor of project)
# @name createStudy
POST http://folio.local/studies
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "study_id": "covid-001",
  "name": "COVID-19 Variant Tracking Study",
  "description": "Analysis of SARS-CoV-2 genetic variants in South Africa",
  "project_id": "8bc2c6bc-94c9-4739-827e-0a5d1584afa6"
}

### Get all studies (user sees studies from projects they have access to)
GET http://folio.local/studies
Authorization: Bearer {{token}}

### Get study members (requires Owner/Admin of parent project)
GET http://folio.local/studies/5f92408e-7a33-44eb-88c1-317c25bd5d2f/members
Authorization: Bearer {{token}}

### Add user to study with read access (requires Owner/Admin of parent project)
POST http://folio.local/studies/5f92408e-7a33-44eb-88c1-317c25bd5d2f/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "contributor@lab.bio",
  "permission": "read"
}

### Add user to study with write access (requires Owner/Admin of parent project)
POST http://folio.local/studies/5f92408e-7a33-44eb-88c1-317c25bd5d2f/members
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "contributor@lab.bio",
  "permission": "write"
}


### === DATA SUBMISSION TESTS (Owner/Admin/Contributor only) ===

### Test uploading data (should fail for Viewers)
POST http://folio.local/submissions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "project_id": "8bc2c6bc-94c9-4739-827e-0a5d1584afa6",
  "title": "Test Submission",
  "description": "Testing data upload permissions",
  "metadata": [
    {
      "sample_id": "TEST001",
      "collection_date": "2024-01-15",
      "country": "South Africa",
      "lineage_name": "BA.5.1"
    }
  ]
}

### View all submissions in project (Owner/Admin see all, Contributors see own, Viewers see none)
GET http://folio.local/projects/8bc2c6bc-94c9-4739-827e-0a5d1584afa6/submissions
Authorization: Bearer {{token}}

### View own submissions (Contributors and above)
GET http://folio.local/submissions/my-submissions
Authorization: Bearer {{token}}

### Publish a submission (Owner/Admin can publish any, Contributors can publish own)
PUT http://folio.local/submissions/submission-id-here/publish
Authorization: Bearer {{token}}


### === CROSS-ORGANISATION ACCESS TESTS ===

### Try to access another organisation's private project (should fail)
GET http://folio.local/projects/private-project-from-another-org
Authorization: Bearer {{token}}

### View public projects from other organisations (should work for all authenticated users)
GET http://folio.local/projects?filter=public&organisation=all
Authorization: Bearer {{token}}


### === ORGANISATION MANAGEMENT (Owner/Org Admin only) ===

### Get organisation members (Owner/Org Admin only)
GET http://folio.local/organisations/{{default_org}}/members
Authorization: Bearer {{token}}

### Invite user to organisation (Owner/Org Admin only)
POST http://folio.local/organisations/{{default_org}}/invitations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "email": "newuser@example.com",
  "role": "organisation-contributor",
  "scope": "all-projects"
}

### Disable user (Owner/Org Admin only)
PUT http://folio.local/organisations/{{default_org}}/members/user-id-here/disable
Authorization: Bearer {{token}}

### Transfer ownership (Owner only)
PUT http://folio.local/organisations/{{default_org}}/transfer-ownership
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "new_owner_email": "new-owner@nicd.ac.za"
}


### === SONG SERVICE ===

### 3.1a. CREATE STUDY
POST http://song.local/studies/{{study_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "studyId": "{{study_id}}",
  "name": "AGARI Test Study", 
  "description": "Test study for genomic data workflow",
  "organization": "NICD",
  "info": {
    "projectType": "genomics",
    "region": "South Africa"
  }
}

### 3.1b. GET STUDY DETAILS
GET http://song.local/studies/{{study_id}}/
Authorization: Bearer {{token}}

### 3.1c. GET STUDY ANALYSES
GET http://song.local/studies/{{study_id}}/analysis
Authorization: Bearer {{token}}

### 3.1d. LIST STUDIES
GET http://song.local/studies/all
Authorization: Bearer {{token}}

### 3.2a. SUBMIT ANALYSIS
# @name submitAnalysis
POST http://song.local/submit/{{study_id}}/
Authorization: Bearer {{token}}
Content-Type: application/json

< ./data/analysis_submission.json

### 3.2b. GET ANALYSIS DETAILS
# Extract analysis_id from step 4 response and get full analysis details
# @submitted_analysis_id = {{submitAnalysis.response.body.analysisId}}
@submitted_analysis_id = 759d93b7-3615-436a-9d93-b73615e36a12
# @name getAnalysis
GET http://song.local/studies/{{study_id}}/analysis/{{submitted_analysis_id}}
Authorization: Bearer {{token}}

### === SCORE SERVICE ===

### 4.1a. INITIALIZE SCORE UPLOAD
# Extract object_id from step 5 response
@object_id = {{getAnalysis.response.body.files[0].objectId}}
# @name initUpload
POST http://score.local/upload/{{object_id}}/uploads
Authorization: Bearer {{token}}
Content-Type: application/x-www-form-urlencoded

fileSize={{test_file_size}}
&md5={{test_file_md5}}
&overwrite=true

###
@upload_id = {{initUpload.response.body.uploadId}}
@presigned_url = {{initUpload.response.body.parts.0.url}}

@md5 = {{initUpload.response.body.objectMd5}}

### 4.1b. UPLOAD FILE TO MINIO
# Using hosts file entry: 127.0.0.1 minio (with port-forward to MinIO)
# @name uploadFile
PUT {{presigned_url}}
Content-Type: text/plain

< ./data/{{test_file_name}}

###
# @etag = {{uploadFile.response.headers.ETag}}
@etag = a1421b18d7859ad811877b981fedca4f
# Debug variables before step 8a
@debug_object_id = {{object_id}}
@debug_etag = {{etag}}
# @etag_stripped = {{etag.replace('"', '')}}
@debug_md5 = {{md5}}
@debug_upload_id = {{upload_id}}

### 4.1c. Finalise Part Upload
# @name finalizePartUpload
POST http://score.local/upload/{{object_id}}/parts?partNumber=1&etag={{etag}}&md5={{md5}}&uploadId={{upload_id}}
Authorization: Bearer {{token}}
Content-Type: application/json

### 4.1d. Finalize upload
# @name finalizeUpload
POST http://score.local/upload/{{object_id}}?uploadId={{upload_id}}
Authorization: Bearer {{token}}
Content-Type: application/json

@analysis_id = 759d93b7-3615-436a-9d93-b73615e36a12

### === SONG SERVICE ===

### 5.1a. PUBLISH ANALYSIS 
PUT http://song.local/studies/{{study_id}}/analysis/publish/{{analysis_id}}
Authorization: Bearer {{token}}

### 5.1b. UNPUBLISH ANALYSIS
PUT http://song.local/studies/{{study_id}}/analysis/unpublish/{{analysis_id}}
Authorization: Bearer {{token}}

### 5.2b. GET ANALYSIS DETAILS
# Extract analysis_id from step 4 response and get full analysis details
# @name getAnalysis
GET http://song.local/studies/{{study_id}}/analysis/{{analysis_id}}
Authorization: Bearer {{token}}

### === MAESTRO SERVICE ===

### 6.1 TRIGGER MAESTRO INDEXING
# @name maestroIndex
POST http://maestro.local/index/repository/song.overture/study/{{study_id}}
Authorization: Bearer {{token}}

### === ELASTICSEARCH ===

### 7.1 CHECK ELASTICSEARCH INDEX
# @name checkElasticsearch
GET http://elasticsearch.local/agari-index/_search
Content-Type: application/json

{
  "query": {
    "match_all": {}
  }
}

### === ARRANGER SERVICE ===

### 8.1 CHECK ARRANGER DATA ACCESS
# @name arrangerGraphQL
POST http://arranger.local/graphql
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "query": "query {file {hits {total}}}"
}