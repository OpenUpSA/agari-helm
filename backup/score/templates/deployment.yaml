apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride | default (printf "%s-score" .Release.Name) }}
  labels:
    app.kubernetes.io/name: {{ .Values.nameOverride | default "score" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.nameOverride | default "score" }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.nameOverride | default "score" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: score
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8087
              protocol: TCP
          env:
            # Spring Configuration
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.score.spring.profiles.active | quote }}
            - name: SERVER_PORT
              value: {{ .Values.score.server.port | quote }}
            # Song Variables
            - name: METADATA_URL
              value: {{ .Values.score.metadata.url | quote }}
            {{- if .Values.score.metadata.ssl }}
            - name: METADATA_SSL_ENABLED
              value: {{ .Values.score.metadata.ssl.enabled | quote }}
            {{- end }}
            {{- if .Values.score.clientCredentials }}
            # Client Credentials for Score to authenticate to SONG
            - name: SCORE_CLIENTCREDENTIALS_ID
              value: {{ .Values.score.clientCredentials.id | quote }}
            - name: SCORE_CLIENTCREDENTIALS_SECRET
              value: {{ .Values.score.clientCredentials.secret | quote }}
            - name: SCORE_CLIENTCREDENTIALS_TOKENURL
              value: {{ .Values.score.clientCredentials.tokenUrl | quote }}
            - name: SCORE_CLIENTCREDENTIALS_SYSTEMSCOPE
              value: {{ .Values.score.clientCredentials.systemScope | quote }}
            {{- end }}
            # Server Variables
            - name: SERVER_SSL_ENABLED
              value: {{ .Values.score.server.ssl.enabled | quote }}
            # Object Storage Variables
            - name: S3_ENDPOINT
              value: {{ .Values.score.s3.endpoint | quote }}
            - name: S3_ACCESSKEY
              value: {{ .Values.score.s3.accesskey | quote }}
            - name: S3_SECRETKEY
              value: {{ .Values.score.s3.secretkey | quote }}
            - name: S3_SIGV4ENABLED
              value: {{ .Values.score.s3.sigv4enabled | quote }}
            - name: S3_SECURED
              value: {{ .Values.score.s3.secured | quote }}
            - name: OBJECT_SENTINEL
              value: {{ .Values.score.object.sentinel | quote }}
            - name: BUCKET_NAME_OBJECT
              value: {{ .Values.score.bucket.name.object | quote }}
            - name: BUCKET_NAME_STATE
              value: {{ .Values.score.bucket.name.state | quote }}
            - name: UPLOAD_PARTSIZE
              value: {{ .Values.score.upload.partsize | quote }}
            - name: UPLOAD_CONNECTION_TIMEOUT
              value: {{ .Values.score.upload.connection.timeout | quote }}
            # Keycloak Variables
            - name: AUTH_SERVER_PROVIDER
              value: {{ .Values.score.auth.server.provider | quote }}
            - name: AUTH_SERVER_CLIENTID
              value: {{ .Values.score.auth.server.clientId | quote }}
            - name: AUTH_SERVER_CLIENTSECRET
              value: {{ .Values.score.auth.server.clientSecret | quote }}
            - name: AUTH_SERVER_TOKENNAME
              value: {{ .Values.score.auth.server.tokenName | quote }}
            - name: AUTH_SERVER_KEYCLOAK_HOST
              value: {{ .Values.score.auth.server.keycloak.host | quote }}
            - name: AUTH_SERVER_KEYCLOAK_REALM
              value: {{ .Values.score.auth.server.keycloak.realm | quote }}
            - name: AUTH_SERVER_SCOPE_UPLOAD_STUDY_PREFIX
              value: {{ .Values.score.auth.server.scope.upload.study.prefix | quote }}
            - name: AUTH_SERVER_SCOPE_DOWNLOAD_STUDY_PREFIX
              value: {{ .Values.score.auth.server.scope.download.study.prefix | quote }}
            - name: AUTH_SERVER_SCOPE_DOWNLOAD_STUDY_SUFFIX
              value: {{ .Values.score.auth.server.scope.download.study.suffix | quote }}
            - name: AUTH_SERVER_SCOPE_UPLOAD_STUDY_SUFFIX
              value: {{ .Values.score.auth.server.scope.upload.study.suffix | quote }}
            - name: AUTH_SERVER_SCOPE_DOWNLOAD_SYSTEM
              value: {{ .Values.score.auth.server.scope.download.system | quote }}
            - name: AUTH_SERVER_SCOPE_UPLOAD_SYSTEM
              value: {{ .Values.score.auth.server.scope.upload.system | quote }}
            - name: AUTH_SERVER_URL
              value: {{ .Values.score.auth.server.url | quote }}
            - name: AUTH_JWT_PUBLICKEYURL
              value: {{ .Values.score.auth.oauth2.resourceserver.jwt.jwkSetUri | quote }}
            # Spring Security OAuth2 Resource Server JWT Configuration
            {{- if .Values.score.auth.oauth2.resourceserver.jwt.jwkSetUri }}
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI
              value: {{ .Values.score.auth.oauth2.resourceserver.jwt.jwkSetUri | quote }}
            {{- end }}
            {{- if .Values.score.auth.oauth2.resourceserver.jwt.issuerUri }}
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
              value: {{ .Values.score.auth.oauth2.resourceserver.jwt.issuerUri | quote }}
            {{- end }}
            # Force legacy public-key-location off so jwk/issuer are honored
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_PUBLIC_KEY_LOCATION
              value: ""
            # Enable filter chain debug
            - name: SPRING_SECURITY_FILTERCHAIN_DEBUG
              value: "true"
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
              value: DEBUG
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY_OAUTH2
              value: DEBUG
            # Duplicates with underscores to satisfy relaxed binding for clientId/clientSecret
            - name: AUTH_SERVER_CLIENT_ID
              value: {{ .Values.score.auth.server.clientId | quote }}
            - name: AUTH_SERVER_CLIENT_SECRET
              value: {{ .Values.score.auth.server.clientSecret | quote }}
            - name: AUTH_SERVER_TOKEN_NAME
              value: {{ .Values.score.auth.server.tokenName | quote }}
            # Force Spring Security Resource Server to use JWKS + issuer and ignore legacy public-key-location
            - name: SPRING_APPLICATION_JSON
              value: >-
                {"spring":{"security":{"oauth2":{"resourceserver":{"jwt":{"jwk-set-uri":"{{ .Values.score.auth.oauth2.resourceserver.jwt.jwkSetUri }}","issuer-uri":"{{ .Values.score.auth.oauth2.resourceserver.jwt.issuerUri }}","public-key-location":""}}}}}}
          readinessProbe:
            tcpSocket:
              port: 8087
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 8087
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
